var search_data = {
    'index': {
        'searchIndex': ["eloquent","eloquent\\pops","eloquent\\pops\\exception","eloquent\\pops\\safe","eloquent\\pops\\abstractproxy","eloquent\\pops\\abstracttraversableproxy","eloquent\\pops\\exception\\invalidtypeexception","eloquent\\pops\\proxy","eloquent\\pops\\proxyarray","eloquent\\pops\\proxyarrayinterface","eloquent\\pops\\proxyclass","eloquent\\pops\\proxyclassinterface","eloquent\\pops\\proxyinterface","eloquent\\pops\\proxyobject","eloquent\\pops\\proxyobjectinterface","eloquent\\pops\\proxyprimitive","eloquent\\pops\\proxyprimitiveinterface","eloquent\\pops\\safe\\safeinterface","eloquent\\pops\\safe\\safeproxy","eloquent\\pops\\safe\\safeproxyarray","eloquent\\pops\\safe\\safeproxyclass","eloquent\\pops\\safe\\safeproxyobject","eloquent\\pops\\safe\\safeproxyprimitive","eloquent\\pops\\traversableproxyinterface","eloquent\\pops\\abstractproxy::__construct","eloquent\\pops\\abstractproxy::setpopsvalue","eloquent\\pops\\abstractproxy::popsvalue","eloquent\\pops\\abstracttraversableproxy::__construct","eloquent\\pops\\abstracttraversableproxy::ispopsrecursive","eloquent\\pops\\abstracttraversableproxy::current","eloquent\\pops\\abstracttraversableproxy::key","eloquent\\pops\\abstracttraversableproxy::next","eloquent\\pops\\abstracttraversableproxy::rewind","eloquent\\pops\\abstracttraversableproxy::valid","eloquent\\pops\\exception\\invalidtypeexception::__construct","eloquent\\pops\\exception\\invalidtypeexception::value","eloquent\\pops\\exception\\invalidtypeexception::expectedtype","eloquent\\pops\\proxy::proxy","eloquent\\pops\\proxy::proxyarray","eloquent\\pops\\proxy::proxyclass","eloquent\\pops\\proxy::proxyclassstatic","eloquent\\pops\\proxy::proxyobject","eloquent\\pops\\proxy::proxyprimitive","eloquent\\pops\\proxyarray::popsarray","eloquent\\pops\\proxyarray::offsetset","eloquent\\pops\\proxyarray::offsetget","eloquent\\pops\\proxyarray::offsetexists","eloquent\\pops\\proxyarray::offsetunset","eloquent\\pops\\proxyarray::count","eloquent\\pops\\proxyarray::__tostring","eloquent\\pops\\proxyclass::__callstatic","eloquent\\pops\\proxyclass::popsproxy","eloquent\\pops\\proxyclass::popsgeneratestaticclassproxy","eloquent\\pops\\proxyclass::__construct","eloquent\\pops\\proxyclass::popsclass","eloquent\\pops\\proxyclass::ispopsrecursive","eloquent\\pops\\proxyclass::popscall","eloquent\\pops\\proxyclass::__call","eloquent\\pops\\proxyclass::__set","eloquent\\pops\\proxyclass::__get","eloquent\\pops\\proxyclass::__isset","eloquent\\pops\\proxyclass::__unset","eloquent\\pops\\proxyclass::__tostring","eloquent\\pops\\proxyclassinterface::ispopsrecursive","eloquent\\pops\\proxyclassinterface::popscall","eloquent\\pops\\proxyclassinterface::__call","eloquent\\pops\\proxyclassinterface::__set","eloquent\\pops\\proxyclassinterface::__get","eloquent\\pops\\proxyclassinterface::__isset","eloquent\\pops\\proxyclassinterface::__unset","eloquent\\pops\\proxyinterface::setpopsvalue","eloquent\\pops\\proxyinterface::popsvalue","eloquent\\pops\\proxyinterface::__tostring","eloquent\\pops\\proxyobject::popsobject","eloquent\\pops\\proxyobject::popscall","eloquent\\pops\\proxyobject::__call","eloquent\\pops\\proxyobject::__invoke","eloquent\\pops\\proxyobject::__set","eloquent\\pops\\proxyobject::__get","eloquent\\pops\\proxyobject::__isset","eloquent\\pops\\proxyobject::__unset","eloquent\\pops\\proxyobject::offsetset","eloquent\\pops\\proxyobject::offsetget","eloquent\\pops\\proxyobject::offsetexists","eloquent\\pops\\proxyobject::offsetunset","eloquent\\pops\\proxyobject::count","eloquent\\pops\\proxyobject::__tostring","eloquent\\pops\\proxyobjectinterface::popscall","eloquent\\pops\\proxyobjectinterface::__call","eloquent\\pops\\proxyobjectinterface::__invoke","eloquent\\pops\\proxyobjectinterface::__set","eloquent\\pops\\proxyobjectinterface::__get","eloquent\\pops\\proxyobjectinterface::__isset","eloquent\\pops\\proxyobjectinterface::__unset","eloquent\\pops\\proxyprimitive::popsprimitive","eloquent\\pops\\proxyprimitive::__tostring","eloquent\\pops\\traversableproxyinterface::ispopsrecursive"],
        'info': [["Eloquent","","Eloquent.html","","",3],["Eloquent\\Pops","","Eloquent\/Pops.html","","",3],["Eloquent\\Pops\\Exception","","Eloquent\/Pops\/Exception.html","","",3],["Eloquent\\Pops\\Safe","","Eloquent\/Pops\/Safe.html","","",3],["AbstractProxy","Eloquent\\Pops","Eloquent\/Pops\/AbstractProxy.html","","An abstract base class for implementing proxies.",1],["AbstractTraversableProxy","Eloquent\\Pops","Eloquent\/Pops\/AbstractTraversableProxy.html"," < AbstractProxy","An abstract base class for implementing traversable",1],["InvalidTypeException","Eloquent\\Pops\\Exception","Eloquent\/Pops\/Exception\/InvalidTypeException.html"," < Exception","A value of an invalid type was supplied.",1],["Proxy","Eloquent\\Pops","Eloquent\/Pops\/Proxy.html","","A transparent proxy.",1],["ProxyArray","Eloquent\\Pops","Eloquent\/Pops\/ProxyArray.html"," < AbstractTraversableProxy","A transparent array proxy.",1],["ProxyArrayInterface","Eloquent\\Pops","Eloquent\/Pops\/ProxyArrayInterface.html","","The interface implemented by array proxies.",1],["ProxyClass","Eloquent\\Pops","Eloquent\/Pops\/ProxyClass.html"," < AbstractProxy","A transparent class proxy.",1],["ProxyClassInterface","Eloquent\\Pops","Eloquent\/Pops\/ProxyClassInterface.html","","The interface implemented by class proxies.",1],["ProxyInterface","Eloquent\\Pops","Eloquent\/Pops\/ProxyInterface.html","","The interface implemented by proxied values.",1],["ProxyObject","Eloquent\\Pops","Eloquent\/Pops\/ProxyObject.html"," < AbstractTraversableProxy","A transparent object proxy.",1],["ProxyObjectInterface","Eloquent\\Pops","Eloquent\/Pops\/ProxyObjectInterface.html","","The interface implemented by object proxies.",1],["ProxyPrimitive","Eloquent\\Pops","Eloquent\/Pops\/ProxyPrimitive.html"," < AbstractProxy","A transparent primitive value proxy.",1],["ProxyPrimitiveInterface","Eloquent\\Pops","Eloquent\/Pops\/ProxyPrimitiveInterface.html","","The interface used to identify primitive value proxies.",1],["SafeInterface","Eloquent\\Pops\\Safe","Eloquent\/Pops\/Safe\/SafeInterface.html","","The interface used to identify values that should not",1],["SafeProxy","Eloquent\\Pops\\Safe","Eloquent\/Pops\/Safe\/SafeProxy.html"," < Proxy","A proxy for wrapping values to prevent recursive proxying.",1],["SafeProxyArray","Eloquent\\Pops\\Safe","Eloquent\/Pops\/Safe\/SafeProxyArray.html"," < ProxyArray","An array proxy that prevents recusive proxying.",1],["SafeProxyClass","Eloquent\\Pops\\Safe","Eloquent\/Pops\/Safe\/SafeProxyClass.html"," < ProxyClass","A class proxy that prevents recusive proxying.",1],["SafeProxyObject","Eloquent\\Pops\\Safe","Eloquent\/Pops\/Safe\/SafeProxyObject.html"," < ProxyObject","An object proxy that prevents recusive proxying.",1],["SafeProxyPrimitive","Eloquent\\Pops\\Safe","Eloquent\/Pops\/Safe\/SafeProxyPrimitive.html"," < ProxyPrimitive","A proxy for primitives that prevents recusive proxying.",1],["TraversableProxyInterface","Eloquent\\Pops","Eloquent\/Pops\/TraversableProxyInterface.html","","The interface implemented by proxied traversable values.",1],["AbstractProxy::__construct","Eloquent\\Pops\\AbstractProxy","Eloquent\/Pops\/AbstractProxy.html#method___construct","(mixed $value)","Construct a new proxy.",2],["AbstractProxy::setPopsValue","Eloquent\\Pops\\AbstractProxy","Eloquent\/Pops\/AbstractProxy.html#method_setPopsValue","(mixed $value)","Set the wrapped value.",2],["AbstractProxy::popsValue","Eloquent\\Pops\\AbstractProxy","Eloquent\/Pops\/AbstractProxy.html#method_popsValue","()","Get the wrapped value.",2],["AbstractTraversableProxy::__construct","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method___construct","(mixed $value, boolean|null $isRecursive = null)","Construct a new traversable proxy.",2],["AbstractTraversableProxy::isPopsRecursive","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method_isPopsRecursive","()","Returns true if the wrapped value is recursively proxied.",2],["AbstractTraversableProxy::current","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method_current","()","Get the current iterator value.",2],["AbstractTraversableProxy::key","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method_key","()","Get the current iterator key.",2],["AbstractTraversableProxy::next","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method_next","()","Move to the next iterator value.",2],["AbstractTraversableProxy::rewind","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method_rewind","()","Rewind to the beginning of the iterator.",2],["AbstractTraversableProxy::valid","Eloquent\\Pops\\AbstractTraversableProxy","Eloquent\/Pops\/AbstractTraversableProxy.html#method_valid","()","Returns true if the current iterator position is valid.",2],["InvalidTypeException::__construct","Eloquent\\Pops\\Exception\\InvalidTypeException","Eloquent\/Pops\/Exception\/InvalidTypeException.html#method___construct","(mixed $value, string $expectedType, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new invalid type exception.",2],["InvalidTypeException::value","Eloquent\\Pops\\Exception\\InvalidTypeException","Eloquent\/Pops\/Exception\/InvalidTypeException.html#method_value","()","Get the upplied value.",2],["InvalidTypeException::expectedType","Eloquent\\Pops\\Exception\\InvalidTypeException","Eloquent\/Pops\/Exception\/InvalidTypeException.html#method_expectedType","()","Get the expected type.",2],["Proxy::proxy","Eloquent\\Pops\\Proxy","Eloquent\/Pops\/Proxy.html#method_proxy","(mixed $value, boolean|null $recursive = null)","Wrap the supplied value in a proxy.",2],["Proxy::proxyArray","Eloquent\\Pops\\Proxy","Eloquent\/Pops\/Proxy.html#method_proxyArray","(array $array, boolean|null $recursive = null)","Wrap the supplied array in a proxy.",2],["Proxy::proxyClass","Eloquent\\Pops\\Proxy","Eloquent\/Pops\/Proxy.html#method_proxyClass","(string $class, boolean|null $recursive = null)","Wrap the supplied class in a non-static proxy.",2],["Proxy::proxyClassStatic","Eloquent\\Pops\\Proxy","Eloquent\/Pops\/Proxy.html#method_proxyClassStatic","(string $class, boolean|null $recursive = null, string $proxyClass = null)","Wrap the supplied class in a static proxy.",2],["Proxy::proxyObject","Eloquent\\Pops\\Proxy","Eloquent\/Pops\/Proxy.html#method_proxyObject","(object $object, boolean|null $recursive = null)","Wrap the supplied object in a proxy.",2],["Proxy::proxyPrimitive","Eloquent\\Pops\\Proxy","Eloquent\/Pops\/Proxy.html#method_proxyPrimitive","(mixed $primitive)","Wrap the supplied primitive value in a proxy.",2],["ProxyArray::popsArray","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method_popsArray","()","Get the wrapped array.",2],["ProxyArray::offsetSet","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method_offsetSet","(integer|string $index, mixed $value)","Set the value of an array index.",2],["ProxyArray::offsetGet","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method_offsetGet","(integer|string $index)","Get the value of an array index.",2],["ProxyArray::offsetExists","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method_offsetExists","(integer|string $index)","Returns true if the specified array index exists.",2],["ProxyArray::offsetUnset","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method_offsetUnset","(integer|string $index)","Remove an array index.",2],["ProxyArray::count","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method_count","()","Get the number of elements in the array.",2],["ProxyArray::__toString","Eloquent\\Pops\\ProxyArray","Eloquent\/Pops\/ProxyArray.html#method___toString","()","Get the string representation of this value.",2],["ProxyClass::__callStatic","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___callStatic","(string $method, array $arguments)","Call a method on this class proxy.",2],["ProxyClass::popsProxy","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method_popsProxy","()","Get the non-static class proxy for this class.",2],["ProxyClass::popsGenerateStaticClassProxy","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method_popsGenerateStaticClassProxy","(string $class, boolean|null $isRecursive = null, string|null $proxyClass = null)","Generate and load a static class proxy.",2],["ProxyClass::__construct","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___construct","(string $class, boolean|null $isRecursive = null)","Construct a new non-static class proxy.",2],["ProxyClass::popsClass","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method_popsClass","()","Get the name of the proxied class.",2],["ProxyClass::isPopsRecursive","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method_isPopsRecursive","()","Returns true if the wrapped class is recursively proxied.",2],["ProxyClass::popsCall","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method_popsCall","(string $method, array $arguments)","Call a static method on the proxied class with support",2],["ProxyClass::__call","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___call","(string $method, array $arguments)","Call a static method on the proxied class.",2],["ProxyClass::__set","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___set","(string $property, mixed $value)","Set the value of a static property on the proxied class.",2],["ProxyClass::__get","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___get","(string $property)","Get the value of a static property on the proxied class.",2],["ProxyClass::__isset","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___isset","(string $property)","Returns true if the supplied static property exists",2],["ProxyClass::__unset","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___unset","(string $property)","Set the value of a static property on the proxied class",2],["ProxyClass::__toString","Eloquent\\Pops\\ProxyClass","Eloquent\/Pops\/ProxyClass.html#method___toString","()","Get the string representation of this value.",2],["ProxyClassInterface::isPopsRecursive","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method_isPopsRecursive","()","Returns true if the wrapped class is recursively proxied.",2],["ProxyClassInterface::popsCall","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method_popsCall","(string $method, array $arguments)","Call a static method on the proxied class with support",2],["ProxyClassInterface::__call","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method___call","(string $method, array $arguments)","Call a static method on the proxied class.",2],["ProxyClassInterface::__set","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method___set","(string $property, mixed $value)","Set the value of a static property on the proxied class.",2],["ProxyClassInterface::__get","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method___get","(string $property)","Get the value of a static property on the proxied class.",2],["ProxyClassInterface::__isset","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method___isset","(string $property)","Returns true if the supplied static property exists",2],["ProxyClassInterface::__unset","Eloquent\\Pops\\ProxyClassInterface","Eloquent\/Pops\/ProxyClassInterface.html#method___unset","(string $property)","Set the value of a static property on the proxied class",2],["ProxyInterface::setPopsValue","Eloquent\\Pops\\ProxyInterface","Eloquent\/Pops\/ProxyInterface.html#method_setPopsValue","(mixed $value)","Set the wrapped value.",2],["ProxyInterface::popsValue","Eloquent\\Pops\\ProxyInterface","Eloquent\/Pops\/ProxyInterface.html#method_popsValue","()","Get the wrapped value.",2],["ProxyInterface::__toString","Eloquent\\Pops\\ProxyInterface","Eloquent\/Pops\/ProxyInterface.html#method___toString","()","Get the string representation of this value.",2],["ProxyObject::popsObject","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_popsObject","()","Get the wrapped object.",2],["ProxyObject::popsCall","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_popsCall","(string $method, array $arguments)","Call a method on the wrapped object with support for",2],["ProxyObject::__call","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___call","(string $method, array $arguments)","Call a method on the wrapped object.",2],["ProxyObject::__invoke","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___invoke","()","Invoke this object.",2],["ProxyObject::__set","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___set","(string $property, mixed $value)","Set the value of a property on the wrapped object.",2],["ProxyObject::__get","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___get","(string $property)","Get the value of a property from the wrapped object.",2],["ProxyObject::__isset","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___isset","(string $property)","Returns true if the property exists on the wrapped",2],["ProxyObject::__unset","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___unset","(string $property)","Unset a property from the wrapped object.",2],["ProxyObject::offsetSet","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_offsetSet","(string $key, mixed $value)","Set a value on the wrapped object using the array access",2],["ProxyObject::offsetGet","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_offsetGet","(string $key)","Get a value from the wrapped object using the array",2],["ProxyObject::offsetExists","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_offsetExists","(string $key)","Returns true if the supplied key exists on the wrapped",2],["ProxyObject::offsetUnset","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_offsetUnset","(string $key)","Remove a key from the wrapped object using the array",2],["ProxyObject::count","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method_count","()","Return the result of the wrapped object's count method.",2],["ProxyObject::__toString","Eloquent\\Pops\\ProxyObject","Eloquent\/Pops\/ProxyObject.html#method___toString","()","Get the string representation of this value.",2],["ProxyObjectInterface::popsCall","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method_popsCall","(string $method, array $arguments)","Call a method on the wrapped object with support for",2],["ProxyObjectInterface::__call","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method___call","(string $method, array $arguments)","Call a method on the wrapped object.",2],["ProxyObjectInterface::__invoke","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method___invoke","()","Invoke this object.",2],["ProxyObjectInterface::__set","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method___set","(string $property, mixed $value)","Set the value of a property on the wrapped object.",2],["ProxyObjectInterface::__get","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method___get","(string $property)","Get the value of a property from the wrapped object.",2],["ProxyObjectInterface::__isset","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method___isset","(string $property)","Returns true if the property exists on the wrapped",2],["ProxyObjectInterface::__unset","Eloquent\\Pops\\ProxyObjectInterface","Eloquent\/Pops\/ProxyObjectInterface.html#method___unset","(string $property)","Unset a property from the wrapped object.",2],["ProxyPrimitive::popsPrimitive","Eloquent\\Pops\\ProxyPrimitive","Eloquent\/Pops\/ProxyPrimitive.html#method_popsPrimitive","()","Get the wrapped value.",2],["ProxyPrimitive::__toString","Eloquent\\Pops\\ProxyPrimitive","Eloquent\/Pops\/ProxyPrimitive.html#method___toString","()","Get the string representation of this value.",2],["TraversableProxyInterface::isPopsRecursive","Eloquent\\Pops\\TraversableProxyInterface","Eloquent\/Pops\/TraversableProxyInterface.html#method_isPopsRecursive","()","Returns true if the wrapped value is recursively proxied.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']